#include <fcntl.h>
#include <sys/mman.h>
#include <sys/syscall.h>
#include <map>

#define _SYSCALL(x) std::make_pair(SYS_##x, #x)
std::map<int, std::string> syscall_map {
    _SYSCALL(_sysctl),
    _SYSCALL(accept),
    _SYSCALL(accept4),
    _SYSCALL(access),
    _SYSCALL(acct),
    _SYSCALL(add_key),
    _SYSCALL(adjtimex),
    _SYSCALL(afs_syscall),
    _SYSCALL(alarm),
    _SYSCALL(arch_prctl),
    _SYSCALL(bind),
    _SYSCALL(brk),
    _SYSCALL(capget),
    _SYSCALL(capset),
    _SYSCALL(chdir),
    _SYSCALL(chmod),
    _SYSCALL(chown),
    _SYSCALL(chroot),
    _SYSCALL(clock_adjtime),
    _SYSCALL(clock_getres),
    _SYSCALL(clock_gettime),
    _SYSCALL(clock_nanosleep),
    _SYSCALL(clock_settime),
    _SYSCALL(clone),
    _SYSCALL(close),
    _SYSCALL(connect),
    _SYSCALL(creat),
    _SYSCALL(create_module),
    _SYSCALL(delete_module),
    _SYSCALL(dup),
    _SYSCALL(dup2),
    _SYSCALL(dup3),
    _SYSCALL(epoll_create),
    _SYSCALL(epoll_create1),
    _SYSCALL(epoll_ctl),
    _SYSCALL(epoll_ctl_old),
    _SYSCALL(epoll_pwait),
    _SYSCALL(epoll_wait),
    _SYSCALL(epoll_wait_old),
    _SYSCALL(eventfd),
    _SYSCALL(eventfd2),
    _SYSCALL(execve),
    _SYSCALL(exit),
    _SYSCALL(exit_group),
    _SYSCALL(faccessat),
    _SYSCALL(fadvise64),
    _SYSCALL(fallocate),
    _SYSCALL(fanotify_init),
    _SYSCALL(fanotify_mark),
    _SYSCALL(fchdir),
    _SYSCALL(fchmod),
    _SYSCALL(fchmodat),
    _SYSCALL(fchown),
    _SYSCALL(fchownat),
    _SYSCALL(fcntl),
    _SYSCALL(fdatasync),
    _SYSCALL(fgetxattr),
    _SYSCALL(finit_module),
    _SYSCALL(flistxattr),
    _SYSCALL(flock),
    _SYSCALL(fork),
    _SYSCALL(fremovexattr),
    _SYSCALL(fsetxattr),
    _SYSCALL(fstat),
    _SYSCALL(fstatfs),
    _SYSCALL(fsync),
    _SYSCALL(ftruncate),
    _SYSCALL(futex),
    _SYSCALL(futimesat),
    _SYSCALL(get_kernel_syms),
    _SYSCALL(get_mempolicy),
    _SYSCALL(get_robust_list),
    _SYSCALL(get_thread_area),
    _SYSCALL(getcpu),
    _SYSCALL(getcwd),
    _SYSCALL(getdents),
    _SYSCALL(getdents64),
    _SYSCALL(getegid),
    _SYSCALL(geteuid),
    _SYSCALL(getgid),
    _SYSCALL(getgroups),
    _SYSCALL(getitimer),
    _SYSCALL(getpeername),
    _SYSCALL(getpgid),
    _SYSCALL(getpgrp),
    _SYSCALL(getpid),
    _SYSCALL(getpmsg),
    _SYSCALL(getppid),
    _SYSCALL(getpriority),
    _SYSCALL(getresgid),
    _SYSCALL(getresuid),
    _SYSCALL(getrlimit),
    _SYSCALL(getrusage),
    _SYSCALL(getsid),
    _SYSCALL(getsockname),
    _SYSCALL(getsockopt),
    _SYSCALL(gettid),
    _SYSCALL(gettimeofday),
    _SYSCALL(getuid),
    _SYSCALL(getxattr),
    _SYSCALL(init_module),
    _SYSCALL(inotify_add_watch),
    _SYSCALL(inotify_init),
    _SYSCALL(inotify_init1),
    _SYSCALL(inotify_rm_watch),
    _SYSCALL(io_cancel),
    _SYSCALL(io_destroy),
    _SYSCALL(io_getevents),
    _SYSCALL(io_setup),
    _SYSCALL(io_submit),
    _SYSCALL(ioctl),
    _SYSCALL(ioperm),
    _SYSCALL(iopl),
    _SYSCALL(ioprio_get),
    _SYSCALL(ioprio_set),
    _SYSCALL(kcmp),
    _SYSCALL(kexec_load),
    _SYSCALL(keyctl),
    _SYSCALL(kill),
    _SYSCALL(lchown),
    _SYSCALL(lgetxattr),
    _SYSCALL(link),
    _SYSCALL(linkat),
    _SYSCALL(listen),
    _SYSCALL(listxattr),
    _SYSCALL(llistxattr),
    _SYSCALL(lookup_dcookie),
    _SYSCALL(lremovexattr),
    _SYSCALL(lseek),
    _SYSCALL(lsetxattr),
    _SYSCALL(lstat),
    _SYSCALL(madvise),
    _SYSCALL(mbind),
    _SYSCALL(migrate_pages),
    _SYSCALL(mincore),
    _SYSCALL(mkdir),
    _SYSCALL(mkdirat),
    _SYSCALL(mknod),
    _SYSCALL(mknodat),
    _SYSCALL(mlock),
    _SYSCALL(mlockall),
    _SYSCALL(mmap),
    _SYSCALL(modify_ldt),
    _SYSCALL(mount),
    _SYSCALL(move_pages),
    _SYSCALL(mprotect),
    _SYSCALL(mq_getsetattr),
    _SYSCALL(mq_notify),
    _SYSCALL(mq_open),
    _SYSCALL(mq_timedreceive),
    _SYSCALL(mq_timedsend),
    _SYSCALL(mq_unlink),
    _SYSCALL(mremap),
    _SYSCALL(msgctl),
    _SYSCALL(msgget),
    _SYSCALL(msgrcv),
    _SYSCALL(msgsnd),
    _SYSCALL(msync),
    _SYSCALL(munlock),
    _SYSCALL(munlockall),
    _SYSCALL(munmap),
    _SYSCALL(name_to_handle_at),
    _SYSCALL(nanosleep),
    _SYSCALL(newfstatat),
    _SYSCALL(nfsservctl),
    _SYSCALL(open),
    _SYSCALL(open_by_handle_at),
    _SYSCALL(openat),
    _SYSCALL(pause),
    _SYSCALL(perf_event_open),
    _SYSCALL(personality),
    _SYSCALL(pipe),
    _SYSCALL(pipe2),
    _SYSCALL(pivot_root),
    _SYSCALL(poll),
    _SYSCALL(ppoll),
    _SYSCALL(prctl),
    _SYSCALL(pread64),
    _SYSCALL(preadv),
    _SYSCALL(prlimit64),
    _SYSCALL(process_vm_readv),
    _SYSCALL(process_vm_writev),
    _SYSCALL(pselect6),
    _SYSCALL(ptrace),
    _SYSCALL(putpmsg),
    _SYSCALL(pwrite64),
    _SYSCALL(pwritev),
    _SYSCALL(query_module),
    _SYSCALL(quotactl),
    _SYSCALL(read),
    _SYSCALL(readahead),
    _SYSCALL(readlink),
    _SYSCALL(readlinkat),
    _SYSCALL(readv),
    _SYSCALL(reboot),
    _SYSCALL(recvfrom),
    _SYSCALL(recvmmsg),
    _SYSCALL(recvmsg),
    _SYSCALL(remap_file_pages),
    _SYSCALL(removexattr),
    _SYSCALL(rename),
    _SYSCALL(renameat),
    _SYSCALL(request_key),
    _SYSCALL(restart_syscall),
    _SYSCALL(rmdir),
    _SYSCALL(rt_sigaction),
    _SYSCALL(rt_sigpending),
    _SYSCALL(rt_sigprocmask),
    _SYSCALL(rt_sigqueueinfo),
    _SYSCALL(rt_sigreturn),
    _SYSCALL(rt_sigsuspend),
    _SYSCALL(rt_sigtimedwait),
    _SYSCALL(rt_tgsigqueueinfo),
    _SYSCALL(sched_get_priority_max),
    _SYSCALL(sched_get_priority_min),
    _SYSCALL(sched_getaffinity),
    _SYSCALL(sched_getparam),
    _SYSCALL(sched_getscheduler),
    _SYSCALL(sched_rr_get_interval),
    _SYSCALL(sched_setaffinity),
    _SYSCALL(sched_setparam),
    _SYSCALL(sched_setscheduler),
    _SYSCALL(sched_yield),
    _SYSCALL(security),
    _SYSCALL(select),
    _SYSCALL(semctl),
    _SYSCALL(semget),
    _SYSCALL(semop),
    _SYSCALL(semtimedop),
    _SYSCALL(sendfile),
    _SYSCALL(sendmmsg),
    _SYSCALL(sendmsg),
    _SYSCALL(sendto),
    _SYSCALL(set_mempolicy),
    _SYSCALL(set_robust_list),
    _SYSCALL(set_thread_area),
    _SYSCALL(set_tid_address),
    _SYSCALL(setdomainname),
    _SYSCALL(setfsgid),
    _SYSCALL(setfsuid),
    _SYSCALL(setgid),
    _SYSCALL(setgroups),
    _SYSCALL(sethostname),
    _SYSCALL(setitimer),
    _SYSCALL(setns),
    _SYSCALL(setpgid),
    _SYSCALL(setpriority),
    _SYSCALL(setregid),
    _SYSCALL(setresgid),
    _SYSCALL(setresuid),
    _SYSCALL(setreuid),
    _SYSCALL(setrlimit),
    _SYSCALL(setsid),
    _SYSCALL(setsockopt),
    _SYSCALL(settimeofday),
    _SYSCALL(setuid),
    _SYSCALL(setxattr),
    _SYSCALL(shmat),
    _SYSCALL(shmctl),
    _SYSCALL(shmdt),
    _SYSCALL(shmget),
    _SYSCALL(shutdown),
    _SYSCALL(sigaltstack),
    _SYSCALL(signalfd),
    _SYSCALL(signalfd4),
    _SYSCALL(socket),
    _SYSCALL(socketpair),
    _SYSCALL(splice),
    _SYSCALL(stat),
    _SYSCALL(statfs),
    _SYSCALL(swapoff),
    _SYSCALL(swapon),
    _SYSCALL(symlink),
    _SYSCALL(symlinkat),
    _SYSCALL(sync),
    _SYSCALL(sync_file_range),
    _SYSCALL(syncfs),
    _SYSCALL(sysfs),
    _SYSCALL(sysinfo),
    _SYSCALL(syslog),
    _SYSCALL(tee),
    _SYSCALL(tgkill),
    _SYSCALL(time),
    _SYSCALL(timer_create),
    _SYSCALL(timer_delete),
    _SYSCALL(timer_getoverrun),
    _SYSCALL(timer_gettime),
    _SYSCALL(timer_settime),
    _SYSCALL(timerfd_create),
    _SYSCALL(timerfd_gettime),
    _SYSCALL(timerfd_settime),
    _SYSCALL(times),
    _SYSCALL(tkill),
    _SYSCALL(truncate),
    _SYSCALL(tuxcall),
    _SYSCALL(umask),
    _SYSCALL(umount2),
    _SYSCALL(uname),
    _SYSCALL(unlink),
    _SYSCALL(unlinkat),
    _SYSCALL(unshare),
    _SYSCALL(uselib),
    _SYSCALL(ustat),
    _SYSCALL(utime),
    _SYSCALL(utimensat),
    _SYSCALL(utimes),
    _SYSCALL(vfork),
    _SYSCALL(vhangup),
    _SYSCALL(vmsplice),
    _SYSCALL(vserver),
    _SYSCALL(wait4),
    _SYSCALL(waitid),
    _SYSCALL(write),
    _SYSCALL(writev),
};
#undef _SYSCALL

#define _E(x) std::make_pair(x, #x)
std::map<int, std::string> open_modes
{
    _E(O_RDONLY),
    _E(O_WRONLY),
    _E(O_RDWR),
    _E(O_CREAT),
    _E(O_APPEND),
    _E(O_ASYNC),
    _E(O_CLOEXEC),
    _E(O_DIRECT),
    _E(O_DIRECTORY),
    _E(O_EXCL),
    _E(O_LARGEFILE),
    _E(O_NOATIME),
    _E(O_NOCTTY),
    _E(O_NOFOLLOW),
    _E(O_NONBLOCK),
    _E(O_NDELAY),
    _E(O_PATH),
    _E(O_SYNC),
    _E(O_TRUNC),
};

std::map<int, std::string> mmap_prot {
    _E(PROT_EXEC),
    _E(PROT_READ),
    _E(PROT_WRITE),
    _E(PROT_NONE),
};

std::map<int, std::string> mmap_flags {
    _E(MAP_SHARED),
    _E(MAP_PRIVATE),
    _E(MAP_32BIT),
    _E(MAP_ANONYMOUS),
    _E(MAP_DENYWRITE),
    _E(MAP_EXECUTABLE),
    _E(MAP_FILE),
    _E(MAP_FIXED),
    _E(MAP_GROWSDOWN),
    _E(MAP_HUGETLB),
    _E(MAP_LOCKED),
    _E(MAP_NONBLOCK),
    _E(MAP_NORESERVE),
    _E(MAP_POPULATE),
    _E(MAP_STACK),
};
#undef _E


